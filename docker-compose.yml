version: '3.8'

services:
  crypto-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto-trading-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Server config
      - PORT=8080
      - GIN_MODE=release

      # API Security
      - API_KEY=${API_KEY}

      # Binance API
      - BINANCE_TESTNET=${BINANCE_TESTNET:-false}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY}

      # Firebase config
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
      - FIREBASE_CREDENTIALS_FILE=/app/config/firebase-credentials.json

      # Timezone
      - TZ=Asia/Bangkok
    
    volumes:
      # Mount Firebase credentials
      - ./config/firebase-credentials.json:/app/config/firebase-credentials.json:ro
      
      # Optional: Mount logs directory
      - ./logs:/app/logs
    
    networks:
      - crypto-network
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits (Oracle Cloud Free Tier)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Optional: Nginx reverse proxy (recommended for production)
  nginx:
    image: nginx:alpine
    container_name: crypto-api-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - crypto-network
    depends_on:
      - crypto-api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  crypto-network:
    driver: bridge
